amazonguard.AmazonGuardMIDlet -> amazonguard.AmazonGuardMIDlet:
    amazonguard.Dictionary dictionary -> k
    amazonguard.MainMenu mainMenu -> n
    amazonguard.TextScreen textScreen -> e
    amazonguard.GameManager gameManager -> h
    javax.microedition.lcdui.Display display -> a
    amazonguard.OptionMenu optionMenu -> q
    amazonguard.OptionScreen optionScreen -> b
    amazonguard.RecordManager recordManager -> m
    short VIBRATION_MILLIS -> l
    short BLACKLIGHT_MILLIS -> f
    boolean initDone -> o
    java.util.Random random -> p
    boolean useSound -> i
    boolean useFlash -> d
    boolean useVibration -> j
    short MAINMENU -> c
    short OPTIONMENU -> g
    57:68:void startApp() -> startApp
    76:81:void pauseApp() -> pauseApp
    89:93:void destroyApp(boolean) -> destroyApp
    97:98:void run() -> run
    106:114:javax.microedition.lcdui.Image createImage(java.lang.String) -> a
    119:121:void fireFlashBackLight() -> g
    125:127:void fireVibrate() -> j
    137:138:void splashScreenPainted() -> b
    148:150:void splashScreenDone() -> f
    158:165:void init() -> e
    168:170:void mainMenuContinue() -> h
    173:178:void mainMenuNewGame() -> c
    183:186:void mainMenuOptions() -> d
    189:195:void optionMenu(short) -> c
    197:214:void setRecordPreferred(short,int) -> a
    217:232:int getRecordPreferred(short) -> a
    236:239:void getEffects() -> a
    244:250:void mainMenuTextScreen(short,short) -> a
    254:261:void mainMenuQuit() -> i
    264:268:void backToMenu(short) -> b
    271:274:void gameManagerMenu(boolean) -> a
amazonguard.Boss -> amazonguard.d:
    short GAME_WIDTH -> g
    short GAME_HEIGHT -> a
    int GAME_MWIDTH -> c
    int GAME_MHEIGHT -> h
    short shiftX -> e
    short shiftY -> d
    int life -> b
    int full_life -> f
    56:63:void init(short) -> a
    66:66:int getLife() -> a
    71:98:void tick() -> b
amazonguard.Dictionary -> amazonguard.j:
    short ix -> k
    short MENU_MIDLET_NAME -> q
    short MENU_NEWGAME -> a
    short MENU_OPTIONS -> p
    short MENU_INSTRUCTIONS -> E
    short MENU_CONTINUE -> J
    short CMD_EXIT -> C
    short LABEL_ABOUT -> B
    short LABEL_BACK -> d
    short LABEL_EDIT -> I
    short LABEL_EXIT -> m
    short LABEL_MODIFY -> y
    short LABEL_OFF -> f
    short LABEL_ON -> G
    short LABEL_SAVE -> g
    short LABEL_VERSION -> n
    short LABEL_SOUND -> w
    short LABEL_VIBRATE -> x
    short LABEL_LIGHT -> r
    short LABEL_LEVEL -> K
    short LABEL_CHOICE -> h
    short LABEL_EASY -> A
    short LABEL_MEDIUM -> c
    short LABEL_HARD -> s
    short LABEL_ERROR_LOAD -> H
    short TEXT_GAME_PLAYER -> u
    short TEXT_GAME_ENIMY -> b
    short TEXT_GAME_LIVES -> i
    short TEXT_GAME_SCORE -> t
    short TEXT_GAME_OVER -> F
    short TEXT_GAME_WINNER -> D
    short TEXT_GAME_YOU_WON -> o
    short TEXT_GAME_YOU_LOST -> e
    short TEXT_INSTRUCTIONS -> v
    short TEXT_HISTORY -> z
    short NUM_IDS -> l
    java.lang.String[] strings -> j
    86:165:java.lang.String getStringsDefault(short) -> a
    169:173:java.lang.String getString(int) -> a
    179:216:void loadText(java.lang.String) -> a
amazonguard.Enemy -> amazonguard.e:
    short explosion -> e
    short type -> a
    short alvox -> b
    short vy -> d
    boolean live -> c
    68:76:void tick() -> b
    79:82:void setDead(javax.microedition.lcdui.Image,int,int) -> a
    85:89:boolean setExplosion() -> a
amazonguard.GameManager -> amazonguard.i:
    short WIDTH -> ah
    short HEIGHT -> ae
    short GAME_DX -> v
    short GAME_DY -> q
    short STR_DY -> R
    short STR_DX -> P
    short ROW_PER_SCREEN -> n
    short old_score -> S
    short old_life -> Z
    java.lang.String strScore -> am
    java.lang.StringBuffer bufScore -> X
    java.lang.StringBuffer bufLife -> J
    char[] charScore -> ag
    char[] charLife -> O
    int sizeScore -> Q
    int sizeLife -> M
    int[][] GAME_MAP -> al
    amazonguard.AmazonGuardMIDlet agm -> z
    javax.microedition.lcdui.game.TiledLayer background -> N
    javax.microedition.lcdui.Image jogadorImage -> e
    amazonguard.Jogador jogador -> B
    boolean explosion -> k
    short explosion_frame -> L
    amazonguard.Boss bossSprite -> b
    javax.microedition.lcdui.Image bossImage -> C
    javax.microedition.lcdui.game.Sprite bonusLifeSprite -> c
    javax.microedition.lcdui.game.Sprite bonusWeaponSprite -> aa
    amazonguard.Shots weaponSprite -> m
    javax.microedition.lcdui.Image weaponsImage -> ab
    amazonguard.Enemy enemySprite -> D
    javax.microedition.lcdui.Image enemyImage -> W
    javax.microedition.lcdui.game.Sprite explosionSprite -> r
    javax.microedition.lcdui.Image explosionImage -> f
    javax.microedition.lcdui.Image playerImage -> U
    javax.microedition.lcdui.game.Sprite playerSprite -> ai
    javax.microedition.lcdui.Command backCommand -> w
    javax.microedition.lcdui.Graphics graphics -> T
    java.util.Vector vshots -> ac
    java.util.Vector venemies -> a
    javax.microedition.lcdui.game.LayerManager layerManager -> A
    java.util.Random random -> aj
    javax.microedition.media.Player shotSoundPlayer -> d
    short game_state -> y
    int backgroundScroll -> g
    int row_in_map -> h
    int desafio -> af
    boolean centered -> ad
    boolean show_message_final -> K
    boolean boss_active -> I
    boolean life_bonus -> G
    int life_bonus_rotate -> E
    boolean weapon_bonus -> u
    int weapon_bonus_rotate -> s
    short enemy_sequential -> l
    int last_enemy_create -> x
    short tick_background -> p
    short tick_enemy -> Y
    short enemy_killed -> H
    short enemy_lost -> t
    int layer_insert -> o
    javax.microedition.lcdui.Font font -> j
    java.lang.Thread animationThread -> F
    boolean useViewWindow -> ak
    int wViewWindow -> V
    int hViewWindow -> i
    303:311:void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable) -> commandAction
    322:394:void init(short) -> a
    401:410:void fillBackgroundMap() -> b
    413:415:void start() -> c
    418:419:void stop() -> j
    422:463:void run() -> run
    466:466:int getWidthGame() -> i
    470:470:int getHeightGame() -> g
    474:474:int getLimitX(int) -> c
    478:478:int getLimitY(int) -> a
    489:713:void tick() -> e
    725:751:void generateEnemies() -> n
    755:759:void fireExplosionPlayer() -> f
    762:764:void finishExplosionPlayer() -> m
    768:775:void fireExplosionBoss() -> h
    783:786:int removeEnemy(int) -> e
    795:798:int removeWeapon(int) -> b
    812:835:void scrollBackground() -> a
    853:894:void draw() -> d
    897:912:void drawGameOver() -> k
    915:930:void drawGameWinner() -> l
    937:937:int random(int) -> d
    941:953:javax.microedition.media.Player createSoundPlayer(java.lang.String,java.lang.String) -> a
    957:968:void startSound(javax.microedition.media.Player) -> a
    971:975:void createShotPlayer(int,int,short) -> a
amazonguard.Jogador -> amazonguard.f:
    amazonguard.GameManager gm -> d
    boolean firing -> f
    boolean visible -> i
    boolean explosion -> e
    short explosion_frame -> h
    short immunity -> g
    short IMMUNITY_TICKS -> c
    short power -> a
    short life -> b
    50:59:void init() -> a
    65:138:void tick(int) -> a
    141:151:void beginExplosion() -> b
amazonguard.MainMenu -> amazonguard.b:
    amazonguard.AmazonGuardMIDlet agm -> a
    boolean gameactive -> b
    javax.microedition.lcdui.Command exitCommand -> c
    45:53:void setGameActive(boolean) -> a
    60:78:void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable) -> commandAction
amazonguard.OptionMenu -> amazonguard.l:
    amazonguard.AmazonGuardMIDlet agm -> a
    javax.microedition.lcdui.Command backCommand -> b
    50:60:void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable) -> commandAction
amazonguard.OptionScreen -> amazonguard.g:
    amazonguard.AmazonGuardMIDlet agm -> c
    javax.microedition.lcdui.Command backCommand -> f
    javax.microedition.lcdui.Command saveCommand -> d
    javax.microedition.lcdui.ChoiceGroup list -> b
    java.lang.String[] stritens -> a
    short option -> e
    64:70:void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable) -> commandAction
amazonguard.RecordManager -> amazonguard.h:
    short idx -> d
    short ID_VIBRATE -> c
    short ID_LIGHT -> e
    short ID_SOUND -> a
    short ID_LEVEL -> i
    short ID_SCORE -> b
    byte[] bytes -> h
    javax.microedition.rms.RecordStore rs -> g
    java.lang.String recordname -> f
    50:77:void setOpen() -> b
    82:88:void setClose() -> a
    98:106:boolean setValue(short,short) -> a
    117:125:byte getValue(short) -> a
amazonguard.Shots -> amazonguard.c:
    short POWER -> a
    int VY -> b
    48:55:boolean tick(int) -> a
amazonguard.SplashScreen -> amazonguard.k:
    amazonguard.AmazonGuardMIDlet agm -> g
    javax.microedition.lcdui.Image buffer -> h
    boolean dismissed -> i
    javax.microedition.lcdui.Graphics graphics -> f
    int height -> b
    int mheight -> d
    int mwidth -> e
    javax.microedition.lcdui.Image splashImage -> c
    int width -> a
    45:49:void dismiss() -> a
    52:53:void keyPressed(int) -> keyPressed
    56:80:void paint(javax.microedition.lcdui.Graphics) -> paint
    83:92:void run() -> run
amazonguard.TextScreen -> amazonguard.a:
    amazonguard.AmazonGuardMIDlet agm -> a
    javax.microedition.lcdui.Command backCommand -> b
    37:38:void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable) -> commandAction
